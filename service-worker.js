"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/wowachiever/index.html","dc64741babf7072d28f6da576681350e"],["/wowachiever/static/css/main.6f58bce9.css","61b42a757fa130068c0073dbe1cdbbce"],["/wowachiever/static/js/main.baea8013.js","ac1bb5ba5bf6c57a8ac94bbdb4c629c6"],["/wowachiever/static/media/bg-death-knight.99cad2f2.jpg","99cad2f23e5a8559692b9fe934a2d852"],["/wowachiever/static/media/bg-demon-hunter.5139b205.jpg","5139b205e4492a04bb182cca0957878c"],["/wowachiever/static/media/bg-druid.694a9f03.jpg","694a9f031098b3d14cd8da01877f69e7"],["/wowachiever/static/media/bg-hunter.0435bf26.jpg","0435bf2656e13fe58ecf97cfa683ca29"],["/wowachiever/static/media/bg-mage.bbfde14c.jpg","bbfde14c9cbd7e9521fa5df0224f21f5"],["/wowachiever/static/media/bg-monk.a3889432.jpg","a3889432141e916362c2328e3f681e9c"],["/wowachiever/static/media/bg-paladin.9897c895.jpg","9897c895224a040801ddf5b152390631"],["/wowachiever/static/media/bg-priest.06cda673.jpg","06cda673c3100c46715c43a3d2c7ede2"],["/wowachiever/static/media/bg-rogue.c6485b57.jpg","c6485b5787c6aff2f550fc05fa77ee67"],["/wowachiever/static/media/bg-shaman.4ba993de.jpg","4ba993dee621c5593c7fd9ed0acb7ce7"],["/wowachiever/static/media/bg-warlock.0bdd3040.jpg","0bdd304076d75b8acf61ae5210f35118"],["/wowachiever/static/media/bg-warrior.92a6de2e.jpg","92a6de2eb08fb671342294f9462b4e64"],["/wowachiever/static/media/bg.700718c5.jpg","700718c511baf9b3d0ccef0940939f22"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/wowachiever/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});